// Generated by CoffeeScript 1.8.0
(function() {
  define(function() {
    var LoaderView;
    LoaderView = Backbone.View.extend({
      show: function(onComplete) {
        return TweenLite.fromTo(this.$el, 0.16, {
          opacity: 0
        }, {
          opacity: 1,
          ease: Power2.easeOut,
          onComplete: (function(_this) {
            return function() {
              _this.$el.css({
                opacity: ""
              });
              return typeof onComplete === "function" ? onComplete() : void 0;
            };
          })(this)
        });
      },
      hide: function(onComplete, delay) {
        return TweenLite.to(this.$el, 0.16, {
          delay: delay,
          opacity: 0,
          ease: Power2.easeOut,
          onComplete: (function(_this) {
            return function() {
              _this.$el.css({
                opacity: ""
              });
              return typeof onComplete === "function" ? onComplete() : void 0;
            };
          })(this)
        });
      }
    });
    return {
      add: function($element, className) {
        var deffer, loaderView, preLoadTimeout, preLoaderTime;
        deffer = $.Deferred();
        loaderView = new LoaderView({
          className: className
        });
        preLoadTimeout = setTimeout((function(_this) {
          return function() {
            loaderView.show();
            return $element.append(loaderView.$el);
          };
        })(this), 60);
        preLoaderTime = (new Date).getTime();
        deffer.promise().done((function(_this) {
          return function(done, access) {
            if (!access) {
              if (((new Date).getTime() - preLoaderTime) < 60) {
                clearTimeout(preLoadTimeout);
                done();
                return loaderView.remove();
              } else {
                return loaderView.hide(function() {
                  done();
                  return loaderView.remove();
                }, 0.6);
              }
            }
          };
        })(this));
        return deffer;
      }
    };
  });

}).call(this);
