// Generated by CoffeeScript 1.8.0
(function() {
  define([], function() {
    var RenderTemplate;
    return RenderTemplate = (function() {
      function RenderTemplate(viewsNames) {
        var viewName, _i, _len;
        this.state = new Object;
        for (_i = 0, _len = viewsNames.length; _i < _len; _i++) {
          viewName = viewsNames[_i];
          this.state[viewName] = new Object;
        }
        return (function(_this) {
          return function(routingSettings) {
            var state, stateName, _ref, _results;
            _ref = _this.state;
            _results = [];
            for (stateName in _ref) {
              state = _ref[stateName];
              _results.push((function($parent, $view) {
                var $viewNew, $viewPre;
                if ($parent == null) {
                  $parent = $(stateName).parent().last();
                }
                if ($view == null) {
                  $view = $parent.find(stateName);
                }
                if (routingSettings[stateName]) {
                  $parent = $(stateName).parent();
                  if (state.template) {
                    if (routingSettings[stateName].template !== state.template) {
                      "update";
                      $viewPre = state.$view;
                      $viewNew = $view.cloneElement();
                      $viewNew.append(routingSettings[stateName].template);
                      $parent.append($viewNew);
                      TweenLite.fromTo($viewPre, 1, {
                        zIndex: 0
                      }, {
                        rotationY: 60,
                        x: "-100%",
                        z: 200,
                        opacity: 0,
                        onComplete: function() {
                          return $viewPre.remove();
                        }
                      });
                      TweenLite.fromTo($viewNew, 1, {
                        zIndex: 1,
                        rotationY: -60,
                        x: "100%",
                        z: 200,
                        opacity: 0
                      }, {
                        rotationY: 0,
                        x: "0%",
                        z: 0,
                        opacity: 1,
                        onComplete: function() {
                          return $viewNew.css({
                            zIndex: "",
                            transform: "",
                            opacity: ""
                          });
                        }
                      });
                      state.$view = $viewNew;
                      return state.template = routingSettings[stateName].template;
                    } else {
                      return "static";
                    }
                  } else {
                    "render";
                    $view.append(routingSettings[stateName].template);
                    TweenLite.fromTo($view, 0.3, {
                      opacity: 0
                    }, {
                      opacity: 1,
                      onComplete: function() {
                        return $view.css({
                          opacity: ""
                        });
                      }
                    });
                    state.$view = $view;
                    return state.template = routingSettings[stateName].template;
                  }
                } else {
                  if (state.template) {
                    TweenLite.fromTo(state.$view, 0.3, {
                      opacity: 1
                    }, {
                      opacity: 0,
                      onComplete: function() {}
                    });
                  }
                  delete state.$view;
                  return delete state.template;
                }
              })());
            }
            return _results;
          };
        })(this);
      }

      return RenderTemplate;

    })();
  });

}).call(this);
