// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var Observer, observer;

  Observer = (function() {
    function Observer() {
      this.subscribers = {};
    }

    Observer.prototype.subscribe = function(name, callback) {
      if (!this.subscribers[name]) {
        this.subscribers[name] = [];
      }
      if (this.subscribers[name].indexOf(callback) === -1) {
        return this.subscribers[name].push(callback);
      }
    };

    Observer.prototype.unsubscribe = function(name, callback) {
      var callbacks, index;
      if (!(callbacks = this.subscribers[name])) {
        return;
      }
      index = callbacks.indexOf(callback);
      if (index > -1) {
        return callbacks.splice(index, 1);
      }
    };

    Observer.prototype.publish = function(name, data) {
      var callbacks, subscribeCallback, _i, _len, _results;
      if (!(callbacks = this.subscribers[name])) {
        return;
      }
      _results = [];
      for (_i = 0, _len = callbacks.length; _i < _len; _i++) {
        subscribeCallback = callbacks[_i];
        _results.push(subscribeCallback(data));
      }
      return _results;
    };

    return Observer;

  })();

  observer = new Observer;

  observer.subscribe("news", function(data) {
    return console.log("user 1 take new " + data.title);
  });

  observer.subscribe("news", function(data) {
    return console.log("user 2 take new " + data.title);
  });

  observer.publish("news", {
    title: "Destruction main center"
  });

}).call(this);
