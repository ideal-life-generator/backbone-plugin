Роутинг:

  Архитектура:
    Парсер для настроек вида:
      1) Передаем объект конфигурации и два каллбека;
      2) Общий метод find, в который передаешь первым аргументом контейнер в котором ищешь, вторым селектор и третьим имя вида;
    1) Отдельно каждое состояние как класс;
      Содержит:
        1) Свое имя;
        2) Урл для запроса;
        3) Кеш для вида;
        4) Элемент вида;
      Методы:
        1) Метод get с загрузкой их рекваер или по кешу принимающий каллбек;
          1) Если он не загружен то произвести загрузку и выполнить каллбек;
          2) Если загружен взять из кеша и выполнить каллбек;
        2) Метод hide:
          1) Удаление элемента из дума;
        3) Метод show:
          1) Добавление элемента в дум;
        4) Метод destroy:
          1) Выполняет каллбек destroy;
    2) Композиция селектора:
      Делает:
        1) Группирует виды одного селектора;
        2) Состояния могут хранить дочерние композиции;
      Содержит:
        1) Имя ( селектор );
      Методы:
        1) Get - получить вид из текущей композиции;
      Поиск будет осуществлятся:
        1) По селектору и имени вида;
    3) Анимационный движок:
      Содержит:
        1) Функции анимаций;
        2) Приоритеты видов;
      Методы:
        1) Обрабатыват следующие анимации:
          2) Первая;
          3) Последняя;
          4) С заменой;
          5) Обновление;
    4) Медиатор:
      Содержит:
        1) Зависимости между состояниями:
          1) Загрузки;
          2) Каллбеков анимации;
        2) Нижние уровни зависят от верхнего;
      Дает методы:
        1) Для загрузки, получает селектор, имя загружаемого вида и каллбек;
        2) Для анимаций, то же самое;
    5) Координатор:
      Содержит:
        1) Карту текущего состояния;
          1) Состояния:
            1) Неиспользовался;
            2) Впервые активен;
            3) Неизменяем;
            4) Облновляемый;
            5) Заменяемый;
            6) Замена;
            7) Последний;
      Делает:
        1) Обновляет карту текущего состояния:
          1) Пройти по текущим:
            1) Запрашиваемы ли они:
              Сделать метод который принимает объект, имя селектора и вида и проверяет есть ли такая комбинация в этом объекте;
              Делать метод для проверки какое состояние в селекторе активно есть на first time или new;
              Ктото кроме этого на том же уровне new;
              Функция возвращающая параметры;
              Функция которая проверяет обновлены ли параметры;
              Сделать метод для проверки соответствия иерархии вида;
              1) Если да то:
                1) Если впервые: до этого был unused, и нету активного в текущем селекторе то first time;
                2) Hold если до этого был first time, new или hold, и если есть параметры update и они не изменились;
                3) Update если до этого был first time или new, и есть update параметры и они изменились;
                4) Если замена то делаем new:
                  1) Если есть хоть один активный вид, и его имя не совпадает с текущим то;
              1) Если нет то:
                1) Если в последний раз то last time:
                  1) Если его нет в активных сoстояниях, и активный в текущем селекторе совпадает с ним и больше нету статусов new;
                2) Если это тот что должен быть заменен, то old:
                  1) Должен быть заменен если он не из активных в данном селекторе и на нем first time или new и в новом состоянии есть новый активный на этом же уровне и о не совпадает;
                3) Hold если вид был last или old;
    6) Менеджер:
      Содержит:
        1) Ссылку на обновленный координатор;
      Делает:
        1) Отталкиваясь от координатора применяет через медиатор нужные состояния:
          1) Получение вида;
          2) Первая анимация;
          3) Анимация обновления;
          4) Анимация заменяемого;
          5) Анимация замены;
          6) Анимация последнего;